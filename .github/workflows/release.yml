name: Build Release

on:
  workflow_dispatch:
  push:
    branches: main

env:
  packageName: "studio.nekomimi.weatherpanel"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.tag.outputs.tag != steps.version.outputs.prop }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "get latest tag"
        id: tag
        run: echo tag=$(git describe --tags --abbrev=0) >> $GITHUB_OUTPUT

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "package.json"
          prop_path: "version"

  build:
    needs: [check]
    if: ${{ needs.check.outputs.run == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "package.json"
          prop_path: "version"

      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ env.packageName }}-${{ steps.version.outputs.prop }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ env.packageName }}-${{ steps.version.outputs.prop }}.unitypackage" >> $GITHUB_ENV

      - name: Create Zip
        uses: thedoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
        with:
          type: "zip"
          directory: "."
          filename: "${{ env.zipFile }}"

      - run: find . -name \*.meta >> metaList

      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList

      - name: Make Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            ./package.json
